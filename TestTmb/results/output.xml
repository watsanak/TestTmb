<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.10.11 on win32)" generated="20230605 15:03:46.896" rpa="false" schemaversion="3">
<suite id="s1" name="Testcase" source="E:\TestTMB\testcase">
<suite id="s1-s1" name="Test2" source="E:\TestTMB\testcase\test2.robot">
<test id="s1-s1-t1" name="Login success" line="33">
<kw name="Code Login">
<arg>${URL}</arg>
<arg>${BROWSER}</arg>
<arg>${USER1}</arg>
<arg>${PASS1}</arg>
<msg timestamp="20230605 15:03:47.769" level="TRACE">Arguments: [ ${url}='http://the-internet.herokuapp.com/login' | ${browser}='Chrome' | ${user}='tomsmith' | ${pass}='SuperSecretPassword!' ]</msg>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230605 15:03:47.780" level="TRACE">Arguments: [ 'http://the-internet.herokuapp.com/login' | 'Chrome' ]</msg>
<msg timestamp="20230605 15:03:47.781" level="INFO">Opening browser 'Chrome' to base url 'http://the-internet.herokuapp.com/login'.</msg>
<msg timestamp="20230605 15:03:47.800" level="INFO">Applicable driver not found; attempting to install with Selenium Manager (Beta)</msg>
<msg timestamp="20230605 15:03:47.801" level="DEBUG">Executing process: D:\Program Files\Python310\lib\site-packages\selenium\webdriver\common\windows\selenium-manager.exe --browser chrome --output json</msg>
<msg timestamp="20230605 15:03:48.457" level="DEBUG">Using driver at: C:\Users\License\.cache\selenium\chromedriver\win32\114.0.5735.90\chromedriver.exe</msg>
<msg timestamp="20230605 15:03:49.137" level="DEBUG">Started executable: `C:\Users\License\.cache\selenium\chromedriver\win32\114.0.5735.90\chromedriver.exe` in a child process with pid: 17496</msg>
<msg timestamp="20230605 15:03:49.738" level="DEBUG">POST http://localhost:62856/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"browserName": "chrome", "pageLoadStrategy": "normal", "goog:chromeOptions": {"extensions": [], "args": []}}}}</msg>
<msg timestamp="20230605 15:03:49.784" level="DEBUG">Starting new HTTP connection (1): localhost:62856</msg>
<msg timestamp="20230605 15:03:51.372" level="DEBUG">http://localhost:62856 "POST /session HTTP/1.1" 200 862</msg>
<msg timestamp="20230605 15:03:51.372" level="DEBUG">Remote response: status=200 | data={"value":{"capabilities":{"acceptInsecureCerts":false,"browserName":"chrome","browserVersion":"114.0.5735.91","chrome":{"chromedriverVersion":"114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052})","userDataDir":"C:\\Users\\License\\AppData\\Local\\Temp\\scoped_dir17496_1619431344"},"goog:chromeOptions":{"debuggerAddress":"localhost:62861"},"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platformName":"windows","proxy":{},"setWindowRect":true,"strictFileInteractability":false,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unhandledPromptBehavior":"dismiss and notify","webauthn:extension:credBlob":true,"webauthn:extension:largeBlob":true,"webauthn:extension:minPinLength":true,"webauthn:extension:prf":true,"webauthn:virtualAuthenticators":true},"sessionId":"1602fa675da5f9cf6a25c80935bc89b5"}} | headers=HTTPHeaderDict({'Content-Length': '862', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:03:51.373" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:03:51.373" level="DEBUG">POST http://localhost:62856/session/1602fa675da5f9cf6a25c80935bc89b5/timeouts {"script": 5000}</msg>
<msg timestamp="20230605 15:03:51.393" level="DEBUG">http://localhost:62856 "POST /session/1602fa675da5f9cf6a25c80935bc89b5/timeouts HTTP/1.1" 200 14</msg>
<msg timestamp="20230605 15:03:51.393" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:03:51.393" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:03:51.393" level="DEBUG">POST http://localhost:62856/session/1602fa675da5f9cf6a25c80935bc89b5/timeouts {"implicit": 0}</msg>
<msg timestamp="20230605 15:03:51.394" level="DEBUG">http://localhost:62856 "POST /session/1602fa675da5f9cf6a25c80935bc89b5/timeouts HTTP/1.1" 200 14</msg>
<msg timestamp="20230605 15:03:51.395" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:03:51.395" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:03:51.395" level="DEBUG">POST http://localhost:62856/session/1602fa675da5f9cf6a25c80935bc89b5/timeouts {"pageLoad": 300000}</msg>
<msg timestamp="20230605 15:03:51.396" level="DEBUG">http://localhost:62856 "POST /session/1602fa675da5f9cf6a25c80935bc89b5/timeouts HTTP/1.1" 200 14</msg>
<msg timestamp="20230605 15:03:51.396" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:03:51.396" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:03:51.396" level="DEBUG">POST http://localhost:62856/session/1602fa675da5f9cf6a25c80935bc89b5/url {"url": "http://the-internet.herokuapp.com/login"}</msg>
<msg timestamp="20230605 15:03:54.198" level="DEBUG">http://localhost:62856 "POST /session/1602fa675da5f9cf6a25c80935bc89b5/url HTTP/1.1" 200 14</msg>
<msg timestamp="20230605 15:03:54.198" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:03:54.198" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:03:54.198" level="DEBUG">Opened browser with session id 1602fa675da5f9cf6a25c80935bc89b5.</msg>
<msg timestamp="20230605 15:03:54.198" level="TRACE">Return: 1</msg>
<status status="PASS" starttime="20230605 15:03:47.770" endtime="20230605 15:03:54.198"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>//input[@id="username"]</arg>
<arg>${user}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230605 15:03:54.199" level="TRACE">Arguments: [ '//input[@id="username"]' | 'tomsmith' ]</msg>
<msg timestamp="20230605 15:03:54.199" level="INFO">Typing text 'tomsmith' into text field '//input[@id="username"]'.</msg>
<msg timestamp="20230605 15:03:54.200" level="DEBUG">POST http://localhost:62856/session/1602fa675da5f9cf6a25c80935bc89b5/elements {"using": "xpath", "value": "//input[@id=\"username\"]"}</msg>
<msg timestamp="20230605 15:03:54.222" level="DEBUG">http://localhost:62856 "POST /session/1602fa675da5f9cf6a25c80935bc89b5/elements HTTP/1.1" 200 96</msg>
<msg timestamp="20230605 15:03:54.222" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"C654DB33A5BD3F9FD23B73DDBB54296C_element_6"}]} | headers=HTTPHeaderDict({'Content-Length': '96', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:03:54.222" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:03:54.222" level="DEBUG">POST http://localhost:62856/session/1602fa675da5f9cf6a25c80935bc89b5/element/C654DB33A5BD3F9FD23B73DDBB54296C_element_6/clear {"id": "C654DB33A5BD3F9FD23B73DDBB54296C_element_6"}</msg>
<msg timestamp="20230605 15:03:54.281" level="DEBUG">http://localhost:62856 "POST /session/1602fa675da5f9cf6a25c80935bc89b5/element/C654DB33A5BD3F9FD23B73DDBB54296C_element_6/clear HTTP/1.1" 200 14</msg>
<msg timestamp="20230605 15:03:54.281" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:03:54.281" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:03:54.281" level="DEBUG">POST http://localhost:62856/session/1602fa675da5f9cf6a25c80935bc89b5/element/C654DB33A5BD3F9FD23B73DDBB54296C_element_6/value {"text": "tomsmith", "value": ["t", "o", "m", "s", "m", "i", "t", "h"], "id": "C654DB33A5BD3F9FD23B73DDBB54296C_element_6"}</msg>
<msg timestamp="20230605 15:03:54.350" level="DEBUG">http://localhost:62856 "POST /session/1602fa675da5f9cf6a25c80935bc89b5/element/C654DB33A5BD3F9FD23B73DDBB54296C_element_6/value HTTP/1.1" 200 14</msg>
<msg timestamp="20230605 15:03:54.350" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:03:54.350" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:03:54.350" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230605 15:03:54.199" endtime="20230605 15:03:54.350"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>//input[@id="password"]</arg>
<arg>${pass}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230605 15:03:54.351" level="TRACE">Arguments: [ '//input[@id="password"]' | 'SuperSecretPassword!' ]</msg>
<msg timestamp="20230605 15:03:54.352" level="INFO">Typing text 'SuperSecretPassword!' into text field '//input[@id="password"]'.</msg>
<msg timestamp="20230605 15:03:54.352" level="DEBUG">POST http://localhost:62856/session/1602fa675da5f9cf6a25c80935bc89b5/elements {"using": "xpath", "value": "//input[@id=\"password\"]"}</msg>
<msg timestamp="20230605 15:03:54.364" level="DEBUG">http://localhost:62856 "POST /session/1602fa675da5f9cf6a25c80935bc89b5/elements HTTP/1.1" 200 96</msg>
<msg timestamp="20230605 15:03:54.364" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"C654DB33A5BD3F9FD23B73DDBB54296C_element_2"}]} | headers=HTTPHeaderDict({'Content-Length': '96', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:03:54.364" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:03:54.364" level="DEBUG">POST http://localhost:62856/session/1602fa675da5f9cf6a25c80935bc89b5/element/C654DB33A5BD3F9FD23B73DDBB54296C_element_2/clear {"id": "C654DB33A5BD3F9FD23B73DDBB54296C_element_2"}</msg>
<msg timestamp="20230605 15:03:54.390" level="DEBUG">http://localhost:62856 "POST /session/1602fa675da5f9cf6a25c80935bc89b5/element/C654DB33A5BD3F9FD23B73DDBB54296C_element_2/clear HTTP/1.1" 200 14</msg>
<msg timestamp="20230605 15:03:54.390" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:03:54.390" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:03:54.390" level="DEBUG">POST http://localhost:62856/session/1602fa675da5f9cf6a25c80935bc89b5/element/C654DB33A5BD3F9FD23B73DDBB54296C_element_2/value {"text": "SuperSecretPassword!", "value": ["S", "u", "p", "e", "r", "S", "e", "c", "r", "e", "t", "P", "a", "s", "s", "w", "o", "r", "d", "!"], "id": "C654DB33A5BD3F9FD23B73DDBB54296C_element_2"}</msg>
<msg timestamp="20230605 15:03:54.454" level="DEBUG">http://localhost:62856 "POST /session/1602fa675da5f9cf6a25c80935bc89b5/element/C654DB33A5BD3F9FD23B73DDBB54296C_element_2/value HTTP/1.1" 200 14</msg>
<msg timestamp="20230605 15:03:54.454" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:03:54.454" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:03:54.454" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230605 15:03:54.351" endtime="20230605 15:03:54.454"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>//button[@class="radius"]</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230605 15:03:54.455" level="TRACE">Arguments: [ '//button[@class="radius"]' ]</msg>
<msg timestamp="20230605 15:03:54.455" level="INFO">Clicking button '//button[@class="radius"]'.</msg>
<msg timestamp="20230605 15:03:54.455" level="DEBUG">POST http://localhost:62856/session/1602fa675da5f9cf6a25c80935bc89b5/elements {"using": "xpath", "value": "//button[@class=\"radius\"]"}</msg>
<msg timestamp="20230605 15:03:54.467" level="DEBUG">http://localhost:62856 "POST /session/1602fa675da5f9cf6a25c80935bc89b5/elements HTTP/1.1" 200 96</msg>
<msg timestamp="20230605 15:03:54.467" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"C654DB33A5BD3F9FD23B73DDBB54296C_element_8"}]} | headers=HTTPHeaderDict({'Content-Length': '96', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:03:54.467" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:03:54.467" level="DEBUG">GET http://localhost:62856/session/1602fa675da5f9cf6a25c80935bc89b5/element/C654DB33A5BD3F9FD23B73DDBB54296C_element_8/name {"id": "C654DB33A5BD3F9FD23B73DDBB54296C_element_8"}</msg>
<msg timestamp="20230605 15:03:54.475" level="DEBUG">http://localhost:62856 "GET /session/1602fa675da5f9cf6a25c80935bc89b5/element/C654DB33A5BD3F9FD23B73DDBB54296C_element_8/name HTTP/1.1" 200 18</msg>
<msg timestamp="20230605 15:03:54.475" level="DEBUG">Remote response: status=200 | data={"value":"button"} | headers=HTTPHeaderDict({'Content-Length': '18', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:03:54.475" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:03:54.475" level="DEBUG">POST http://localhost:62856/session/1602fa675da5f9cf6a25c80935bc89b5/elements {"using": "xpath", "value": "//button[@class=\"radius\"]"}</msg>
<msg timestamp="20230605 15:03:54.483" level="DEBUG">http://localhost:62856 "POST /session/1602fa675da5f9cf6a25c80935bc89b5/elements HTTP/1.1" 200 96</msg>
<msg timestamp="20230605 15:03:54.483" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"C654DB33A5BD3F9FD23B73DDBB54296C_element_8"}]} | headers=HTTPHeaderDict({'Content-Length': '96', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:03:54.483" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:03:54.483" level="DEBUG">GET http://localhost:62856/session/1602fa675da5f9cf6a25c80935bc89b5/element/C654DB33A5BD3F9FD23B73DDBB54296C_element_8/name {"id": "C654DB33A5BD3F9FD23B73DDBB54296C_element_8"}</msg>
<msg timestamp="20230605 15:03:54.491" level="DEBUG">http://localhost:62856 "GET /session/1602fa675da5f9cf6a25c80935bc89b5/element/C654DB33A5BD3F9FD23B73DDBB54296C_element_8/name HTTP/1.1" 200 18</msg>
<msg timestamp="20230605 15:03:54.491" level="DEBUG">Remote response: status=200 | data={"value":"button"} | headers=HTTPHeaderDict({'Content-Length': '18', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:03:54.491" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:03:54.491" level="DEBUG">POST http://localhost:62856/session/1602fa675da5f9cf6a25c80935bc89b5/element/C654DB33A5BD3F9FD23B73DDBB54296C_element_8/click {"id": "C654DB33A5BD3F9FD23B73DDBB54296C_element_8"}</msg>
<msg timestamp="20230605 15:03:55.177" level="DEBUG">http://localhost:62856 "POST /session/1602fa675da5f9cf6a25c80935bc89b5/element/C654DB33A5BD3F9FD23B73DDBB54296C_element_8/click HTTP/1.1" 200 14</msg>
<msg timestamp="20230605 15:03:55.177" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:03:55.178" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:03:55.178" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230605 15:03:54.454" endtime="20230605 15:03:55.178"/>
</kw>
<msg timestamp="20230605 15:03:55.178" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230605 15:03:47.769" endtime="20230605 15:03:55.178"/>
</kw>
<kw name="Page Should Contain Text">
<arg>You logged into a secure area!</arg>
<msg timestamp="20230605 15:03:55.179" level="TRACE">Arguments: [ ${text}='You logged into a secure area!' ]</msg>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>//*[contains(text(),"${text}")]</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20230605 15:03:55.181" level="TRACE">Arguments: [ '//*[contains(text(),"You logged into a secure area!")]' ]</msg>
<msg timestamp="20230605 15:03:55.181" level="DEBUG">POST http://localhost:62856/session/1602fa675da5f9cf6a25c80935bc89b5/elements {"using": "xpath", "value": "//*[contains(text(),\"You logged into a secure area!\")]"}</msg>
<msg timestamp="20230605 15:03:55.219" level="DEBUG">http://localhost:62856 "POST /session/1602fa675da5f9cf6a25c80935bc89b5/elements HTTP/1.1" 200 97</msg>
<msg timestamp="20230605 15:03:55.219" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"17C902FE6904F5B8A8362C7029B90584_element_11"}]} | headers=HTTPHeaderDict({'Content-Length': '97', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:03:55.220" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:03:55.220" level="INFO">Current page contains element '//*[contains(text(),"You logged into a secure area!")]'.</msg>
<msg timestamp="20230605 15:03:55.220" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230605 15:03:55.180" endtime="20230605 15:03:55.220"/>
</kw>
<msg timestamp="20230605 15:03:55.221" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230605 15:03:55.179" endtime="20230605 15:03:55.221"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20230605 15:03:55.224" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230605 15:03:55.224" level="DEBUG">GET http://localhost:62856/session/1602fa675da5f9cf6a25c80935bc89b5/screenshot {}</msg>
<msg timestamp="20230605 15:03:55.350" level="DEBUG">http://localhost:62856 "GET /session/1602fa675da5f9cf6a25c80935bc89b5/screenshot HTTP/1.1" 200 45820</msg>
<msg timestamp="20230605 15:03:55.350" level="DEBUG">Remote response: status=200 | data={"value":""} | headers=HTTPHeaderDict({'Content-Length': '45820', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:03:55.351" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:03:55.364" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-1.png"&gt;&lt;img src="selenium-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230605 15:03:55.364" level="TRACE">Return: 'E:\\TestTMB\\results\\selenium-screenshot-1.png'</msg>
<status status="PASS" starttime="20230605 15:03:55.223" endtime="20230605 15:03:55.364"/>
</kw>
<kw name="Code Logout">
<msg timestamp="20230605 15:03:55.365" level="TRACE">Arguments: [  ]</msg>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//a[@class="button secondary radius"]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230605 15:03:55.367" level="TRACE">Arguments: [ '//a[@class="button secondary radius"]' ]</msg>
<msg timestamp="20230605 15:03:55.367" level="INFO">Clicking element '//a[@class="button secondary radius"]'.</msg>
<msg timestamp="20230605 15:03:55.367" level="DEBUG">POST http://localhost:62856/session/1602fa675da5f9cf6a25c80935bc89b5/elements {"using": "xpath", "value": "//a[@class=\"button secondary radius\"]"}</msg>
<msg timestamp="20230605 15:03:55.382" level="DEBUG">http://localhost:62856 "POST /session/1602fa675da5f9cf6a25c80935bc89b5/elements HTTP/1.1" 200 97</msg>
<msg timestamp="20230605 15:03:55.382" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"17C902FE6904F5B8A8362C7029B90584_element_12"}]} | headers=HTTPHeaderDict({'Content-Length': '97', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:03:55.382" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:03:55.383" level="DEBUG">POST http://localhost:62856/session/1602fa675da5f9cf6a25c80935bc89b5/element/17C902FE6904F5B8A8362C7029B90584_element_12/click {"id": "17C902FE6904F5B8A8362C7029B90584_element_12"}</msg>
<msg timestamp="20230605 15:03:56.060" level="DEBUG">http://localhost:62856 "POST /session/1602fa675da5f9cf6a25c80935bc89b5/element/17C902FE6904F5B8A8362C7029B90584_element_12/click HTTP/1.1" 200 14</msg>
<msg timestamp="20230605 15:03:56.061" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:03:56.061" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:03:56.061" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230605 15:03:55.366" endtime="20230605 15:03:56.061"/>
</kw>
<kw name="Page Should Contain Text">
<arg>You logged out of the secure</arg>
<msg timestamp="20230605 15:03:56.061" level="TRACE">Arguments: [ ${text}='You logged out of the secure' ]</msg>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>//*[contains(text(),"${text}")]</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20230605 15:03:56.062" level="TRACE">Arguments: [ '//*[contains(text(),"You logged out of the secure")]' ]</msg>
<msg timestamp="20230605 15:03:56.062" level="DEBUG">POST http://localhost:62856/session/1602fa675da5f9cf6a25c80935bc89b5/elements {"using": "xpath", "value": "//*[contains(text(),\"You logged out of the secure\")]"}</msg>
<msg timestamp="20230605 15:03:56.079" level="DEBUG">http://localhost:62856 "POST /session/1602fa675da5f9cf6a25c80935bc89b5/elements HTTP/1.1" 200 97</msg>
<msg timestamp="20230605 15:03:56.079" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"502AF2D540E18ABE013F2413B5AD528C_element_18"}]} | headers=HTTPHeaderDict({'Content-Length': '97', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:03:56.079" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:03:56.079" level="INFO">Current page contains element '//*[contains(text(),"You logged out of the secure")]'.</msg>
<msg timestamp="20230605 15:03:56.079" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230605 15:03:56.061" endtime="20230605 15:03:56.079"/>
</kw>
<msg timestamp="20230605 15:03:56.080" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230605 15:03:56.061" endtime="20230605 15:03:56.080"/>
</kw>
<msg timestamp="20230605 15:03:56.080" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230605 15:03:55.365" endtime="20230605 15:03:56.080"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20230605 15:03:56.081" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230605 15:03:56.082" level="DEBUG">GET http://localhost:62856/session/1602fa675da5f9cf6a25c80935bc89b5/screenshot {}</msg>
<msg timestamp="20230605 15:03:56.169" level="DEBUG">http://localhost:62856 "GET /session/1602fa675da5f9cf6a25c80935bc89b5/screenshot HTTP/1.1" 200 72596</msg>
<msg timestamp="20230605 15:03:56.170" level="DEBUG">Remote response: status=200 | data={"value":""} | headers=HTTPHeaderDict({'Content-Length': '72596', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:03:56.170" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:03:56.173" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-2.png"&gt;&lt;img src="selenium-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230605 15:03:56.173" level="TRACE">Return: 'E:\\TestTMB\\results\\selenium-screenshot-2.png'</msg>
<status status="PASS" starttime="20230605 15:03:56.081" endtime="20230605 15:03:56.173"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<msg timestamp="20230605 15:03:56.174" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230605 15:03:56.174" level="DEBUG">Closing browser with session id 1602fa675da5f9cf6a25c80935bc89b5.</msg>
<msg timestamp="20230605 15:03:56.174" level="DEBUG">DELETE http://localhost:62856/session/1602fa675da5f9cf6a25c80935bc89b5 {}</msg>
<msg timestamp="20230605 15:03:56.270" level="DEBUG">http://localhost:62856 "DELETE /session/1602fa675da5f9cf6a25c80935bc89b5 HTTP/1.1" 200 14</msg>
<msg timestamp="20230605 15:03:56.270" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:03:56.270" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:03:58.345" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230605 15:03:56.173" endtime="20230605 15:03:58.345"/>
</kw>
<doc>To verify that users can login successfully
when input a correct username and password.</doc>
<tag>test</tag>
<tag>test_tmb</tag>
<status status="PASS" starttime="20230605 15:03:47.767" endtime="20230605 15:03:58.347"/>
</test>
<test id="s1-s1-t2" name="Login failed - Password incorrect" line="43">
<kw name="Code Login">
<arg>${URL}</arg>
<arg>${BROWSER}</arg>
<arg>${USER1}</arg>
<arg>${PASS2}</arg>
<msg timestamp="20230605 15:03:58.361" level="TRACE">Arguments: [ ${url}='http://the-internet.herokuapp.com/login' | ${browser}='Chrome' | ${user}='tomsmith' | ${pass}='Password!' ]</msg>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230605 15:03:58.362" level="TRACE">Arguments: [ 'http://the-internet.herokuapp.com/login' | 'Chrome' ]</msg>
<msg timestamp="20230605 15:03:58.362" level="INFO">Opening browser 'Chrome' to base url 'http://the-internet.herokuapp.com/login'.</msg>
<msg timestamp="20230605 15:03:58.387" level="INFO">Applicable driver not found; attempting to install with Selenium Manager (Beta)</msg>
<msg timestamp="20230605 15:03:58.388" level="DEBUG">Executing process: D:\Program Files\Python310\lib\site-packages\selenium\webdriver\common\windows\selenium-manager.exe --browser chrome --output json</msg>
<msg timestamp="20230605 15:03:58.533" level="DEBUG">Using driver at: C:\Users\License\.cache\selenium\chromedriver\win32\114.0.5735.90\chromedriver.exe</msg>
<msg timestamp="20230605 15:03:58.537" level="DEBUG">Started executable: `C:\Users\License\.cache\selenium\chromedriver\win32\114.0.5735.90\chromedriver.exe` in a child process with pid: 15704</msg>
<msg timestamp="20230605 15:03:59.044" level="DEBUG">POST http://localhost:62882/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"browserName": "chrome", "pageLoadStrategy": "normal", "goog:chromeOptions": {"extensions": [], "args": []}}}}</msg>
<msg timestamp="20230605 15:03:59.044" level="DEBUG">Starting new HTTP connection (1): localhost:62882</msg>
<msg timestamp="20230605 15:03:59.796" level="DEBUG">http://localhost:62882 "POST /session HTTP/1.1" 200 861</msg>
<msg timestamp="20230605 15:03:59.796" level="DEBUG">Remote response: status=200 | data={"value":{"capabilities":{"acceptInsecureCerts":false,"browserName":"chrome","browserVersion":"114.0.5735.91","chrome":{"chromedriverVersion":"114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052})","userDataDir":"C:\\Users\\License\\AppData\\Local\\Temp\\scoped_dir15704_133302075"},"goog:chromeOptions":{"debuggerAddress":"localhost:62886"},"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platformName":"windows","proxy":{},"setWindowRect":true,"strictFileInteractability":false,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unhandledPromptBehavior":"dismiss and notify","webauthn:extension:credBlob":true,"webauthn:extension:largeBlob":true,"webauthn:extension:minPinLength":true,"webauthn:extension:prf":true,"webauthn:virtualAuthenticators":true},"sessionId":"88bb15898e9a12154192427711d54cdd"}} | headers=HTTPHeaderDict({'Content-Length': '861', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:03:59.797" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:03:59.797" level="DEBUG">POST http://localhost:62882/session/88bb15898e9a12154192427711d54cdd/timeouts {"script": 5000}</msg>
<msg timestamp="20230605 15:03:59.798" level="DEBUG">http://localhost:62882 "POST /session/88bb15898e9a12154192427711d54cdd/timeouts HTTP/1.1" 200 14</msg>
<msg timestamp="20230605 15:03:59.798" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:03:59.798" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:03:59.799" level="DEBUG">POST http://localhost:62882/session/88bb15898e9a12154192427711d54cdd/timeouts {"implicit": 0}</msg>
<msg timestamp="20230605 15:03:59.800" level="DEBUG">http://localhost:62882 "POST /session/88bb15898e9a12154192427711d54cdd/timeouts HTTP/1.1" 200 14</msg>
<msg timestamp="20230605 15:03:59.800" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:03:59.800" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:03:59.800" level="DEBUG">POST http://localhost:62882/session/88bb15898e9a12154192427711d54cdd/timeouts {"pageLoad": 300000}</msg>
<msg timestamp="20230605 15:03:59.803" level="DEBUG">http://localhost:62882 "POST /session/88bb15898e9a12154192427711d54cdd/timeouts HTTP/1.1" 200 14</msg>
<msg timestamp="20230605 15:03:59.804" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:03:59.804" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:03:59.805" level="DEBUG">POST http://localhost:62882/session/88bb15898e9a12154192427711d54cdd/url {"url": "http://the-internet.herokuapp.com/login"}</msg>
<msg timestamp="20230605 15:04:02.625" level="DEBUG">http://localhost:62882 "POST /session/88bb15898e9a12154192427711d54cdd/url HTTP/1.1" 200 14</msg>
<msg timestamp="20230605 15:04:02.625" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:04:02.626" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:04:02.626" level="DEBUG">Opened browser with session id 88bb15898e9a12154192427711d54cdd.</msg>
<msg timestamp="20230605 15:04:02.626" level="TRACE">Return: 2</msg>
<status status="PASS" starttime="20230605 15:03:58.361" endtime="20230605 15:04:02.626"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>//input[@id="username"]</arg>
<arg>${user}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230605 15:04:02.626" level="TRACE">Arguments: [ '//input[@id="username"]' | 'tomsmith' ]</msg>
<msg timestamp="20230605 15:04:02.627" level="INFO">Typing text 'tomsmith' into text field '//input[@id="username"]'.</msg>
<msg timestamp="20230605 15:04:02.627" level="DEBUG">POST http://localhost:62882/session/88bb15898e9a12154192427711d54cdd/elements {"using": "xpath", "value": "//input[@id=\"username\"]"}</msg>
<msg timestamp="20230605 15:04:02.643" level="DEBUG">http://localhost:62882 "POST /session/88bb15898e9a12154192427711d54cdd/elements HTTP/1.1" 200 96</msg>
<msg timestamp="20230605 15:04:02.643" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"0861F23DFE82C6C06AB5BF71F1C5E4C9_element_6"}]} | headers=HTTPHeaderDict({'Content-Length': '96', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:04:02.643" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:04:02.643" level="DEBUG">POST http://localhost:62882/session/88bb15898e9a12154192427711d54cdd/element/0861F23DFE82C6C06AB5BF71F1C5E4C9_element_6/clear {"id": "0861F23DFE82C6C06AB5BF71F1C5E4C9_element_6"}</msg>
<msg timestamp="20230605 15:04:02.681" level="DEBUG">http://localhost:62882 "POST /session/88bb15898e9a12154192427711d54cdd/element/0861F23DFE82C6C06AB5BF71F1C5E4C9_element_6/clear HTTP/1.1" 200 14</msg>
<msg timestamp="20230605 15:04:02.681" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:04:02.681" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:04:02.681" level="DEBUG">POST http://localhost:62882/session/88bb15898e9a12154192427711d54cdd/element/0861F23DFE82C6C06AB5BF71F1C5E4C9_element_6/value {"text": "tomsmith", "value": ["t", "o", "m", "s", "m", "i", "t", "h"], "id": "0861F23DFE82C6C06AB5BF71F1C5E4C9_element_6"}</msg>
<msg timestamp="20230605 15:04:02.746" level="DEBUG">http://localhost:62882 "POST /session/88bb15898e9a12154192427711d54cdd/element/0861F23DFE82C6C06AB5BF71F1C5E4C9_element_6/value HTTP/1.1" 200 14</msg>
<msg timestamp="20230605 15:04:02.746" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:04:02.746" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:04:02.746" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230605 15:04:02.626" endtime="20230605 15:04:02.746"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>//input[@id="password"]</arg>
<arg>${pass}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230605 15:04:02.747" level="TRACE">Arguments: [ '//input[@id="password"]' | 'Password!' ]</msg>
<msg timestamp="20230605 15:04:02.747" level="INFO">Typing text 'Password!' into text field '//input[@id="password"]'.</msg>
<msg timestamp="20230605 15:04:02.748" level="DEBUG">POST http://localhost:62882/session/88bb15898e9a12154192427711d54cdd/elements {"using": "xpath", "value": "//input[@id=\"password\"]"}</msg>
<msg timestamp="20230605 15:04:02.762" level="DEBUG">http://localhost:62882 "POST /session/88bb15898e9a12154192427711d54cdd/elements HTTP/1.1" 200 96</msg>
<msg timestamp="20230605 15:04:02.762" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"0861F23DFE82C6C06AB5BF71F1C5E4C9_element_3"}]} | headers=HTTPHeaderDict({'Content-Length': '96', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:04:02.762" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:04:02.762" level="DEBUG">POST http://localhost:62882/session/88bb15898e9a12154192427711d54cdd/element/0861F23DFE82C6C06AB5BF71F1C5E4C9_element_3/clear {"id": "0861F23DFE82C6C06AB5BF71F1C5E4C9_element_3"}</msg>
<msg timestamp="20230605 15:04:02.788" level="DEBUG">http://localhost:62882 "POST /session/88bb15898e9a12154192427711d54cdd/element/0861F23DFE82C6C06AB5BF71F1C5E4C9_element_3/clear HTTP/1.1" 200 14</msg>
<msg timestamp="20230605 15:04:02.788" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:04:02.788" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:04:02.788" level="DEBUG">POST http://localhost:62882/session/88bb15898e9a12154192427711d54cdd/element/0861F23DFE82C6C06AB5BF71F1C5E4C9_element_3/value {"text": "Password!", "value": ["P", "a", "s", "s", "w", "o", "r", "d", "!"], "id": "0861F23DFE82C6C06AB5BF71F1C5E4C9_element_3"}</msg>
<msg timestamp="20230605 15:04:02.844" level="DEBUG">http://localhost:62882 "POST /session/88bb15898e9a12154192427711d54cdd/element/0861F23DFE82C6C06AB5BF71F1C5E4C9_element_3/value HTTP/1.1" 200 14</msg>
<msg timestamp="20230605 15:04:02.844" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:04:02.844" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:04:02.844" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230605 15:04:02.746" endtime="20230605 15:04:02.844"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>//button[@class="radius"]</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230605 15:04:02.845" level="TRACE">Arguments: [ '//button[@class="radius"]' ]</msg>
<msg timestamp="20230605 15:04:02.845" level="INFO">Clicking button '//button[@class="radius"]'.</msg>
<msg timestamp="20230605 15:04:02.845" level="DEBUG">POST http://localhost:62882/session/88bb15898e9a12154192427711d54cdd/elements {"using": "xpath", "value": "//button[@class=\"radius\"]"}</msg>
<msg timestamp="20230605 15:04:02.858" level="DEBUG">http://localhost:62882 "POST /session/88bb15898e9a12154192427711d54cdd/elements HTTP/1.1" 200 96</msg>
<msg timestamp="20230605 15:04:02.858" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"0861F23DFE82C6C06AB5BF71F1C5E4C9_element_8"}]} | headers=HTTPHeaderDict({'Content-Length': '96', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:04:02.858" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:04:02.858" level="DEBUG">GET http://localhost:62882/session/88bb15898e9a12154192427711d54cdd/element/0861F23DFE82C6C06AB5BF71F1C5E4C9_element_8/name {"id": "0861F23DFE82C6C06AB5BF71F1C5E4C9_element_8"}</msg>
<msg timestamp="20230605 15:04:02.864" level="DEBUG">http://localhost:62882 "GET /session/88bb15898e9a12154192427711d54cdd/element/0861F23DFE82C6C06AB5BF71F1C5E4C9_element_8/name HTTP/1.1" 200 18</msg>
<msg timestamp="20230605 15:04:02.864" level="DEBUG">Remote response: status=200 | data={"value":"button"} | headers=HTTPHeaderDict({'Content-Length': '18', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:04:02.864" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:04:02.864" level="DEBUG">POST http://localhost:62882/session/88bb15898e9a12154192427711d54cdd/elements {"using": "xpath", "value": "//button[@class=\"radius\"]"}</msg>
<msg timestamp="20230605 15:04:02.871" level="DEBUG">http://localhost:62882 "POST /session/88bb15898e9a12154192427711d54cdd/elements HTTP/1.1" 200 96</msg>
<msg timestamp="20230605 15:04:02.871" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"0861F23DFE82C6C06AB5BF71F1C5E4C9_element_8"}]} | headers=HTTPHeaderDict({'Content-Length': '96', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:04:02.871" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:04:02.871" level="DEBUG">GET http://localhost:62882/session/88bb15898e9a12154192427711d54cdd/element/0861F23DFE82C6C06AB5BF71F1C5E4C9_element_8/name {"id": "0861F23DFE82C6C06AB5BF71F1C5E4C9_element_8"}</msg>
<msg timestamp="20230605 15:04:02.877" level="DEBUG">http://localhost:62882 "GET /session/88bb15898e9a12154192427711d54cdd/element/0861F23DFE82C6C06AB5BF71F1C5E4C9_element_8/name HTTP/1.1" 200 18</msg>
<msg timestamp="20230605 15:04:02.877" level="DEBUG">Remote response: status=200 | data={"value":"button"} | headers=HTTPHeaderDict({'Content-Length': '18', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:04:02.877" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:04:02.878" level="DEBUG">POST http://localhost:62882/session/88bb15898e9a12154192427711d54cdd/element/0861F23DFE82C6C06AB5BF71F1C5E4C9_element_8/click {"id": "0861F23DFE82C6C06AB5BF71F1C5E4C9_element_8"}</msg>
<msg timestamp="20230605 15:04:03.550" level="DEBUG">http://localhost:62882 "POST /session/88bb15898e9a12154192427711d54cdd/element/0861F23DFE82C6C06AB5BF71F1C5E4C9_element_8/click HTTP/1.1" 200 14</msg>
<msg timestamp="20230605 15:04:03.551" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:04:03.551" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:04:03.551" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230605 15:04:02.844" endtime="20230605 15:04:03.551"/>
</kw>
<msg timestamp="20230605 15:04:03.552" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230605 15:03:58.360" endtime="20230605 15:04:03.552"/>
</kw>
<kw name="Page Should Contain Text">
<arg>Your password is invalid!</arg>
<msg timestamp="20230605 15:04:03.553" level="TRACE">Arguments: [ ${text}='Your password is invalid!' ]</msg>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>//*[contains(text(),"${text}")]</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20230605 15:04:03.555" level="TRACE">Arguments: [ '//*[contains(text(),"Your password is invalid!")]' ]</msg>
<msg timestamp="20230605 15:04:03.555" level="DEBUG">POST http://localhost:62882/session/88bb15898e9a12154192427711d54cdd/elements {"using": "xpath", "value": "//*[contains(text(),\"Your password is invalid!\")]"}</msg>
<msg timestamp="20230605 15:04:03.581" level="DEBUG">http://localhost:62882 "POST /session/88bb15898e9a12154192427711d54cdd/elements HTTP/1.1" 200 97</msg>
<msg timestamp="20230605 15:04:03.582" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"B2E1E4DDE671D59138651527A351FE87_element_12"}]} | headers=HTTPHeaderDict({'Content-Length': '97', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:04:03.582" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:04:03.582" level="INFO">Current page contains element '//*[contains(text(),"Your password is invalid!")]'.</msg>
<msg timestamp="20230605 15:04:03.582" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230605 15:04:03.553" endtime="20230605 15:04:03.582"/>
</kw>
<msg timestamp="20230605 15:04:03.582" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230605 15:04:03.552" endtime="20230605 15:04:03.582"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20230605 15:04:03.583" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230605 15:04:03.585" level="DEBUG">GET http://localhost:62882/session/88bb15898e9a12154192427711d54cdd/screenshot {}</msg>
<msg timestamp="20230605 15:04:03.700" level="DEBUG">http://localhost:62882 "GET /session/88bb15898e9a12154192427711d54cdd/screenshot HTTP/1.1" 200 72140</msg>
<msg timestamp="20230605 15:04:03.700" level="DEBUG">Remote response: status=200 | data={"value":""} | headers=HTTPHeaderDict({'Content-Length': '72140', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:04:03.701" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:04:03.743" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-3.png"&gt;&lt;img src="selenium-screenshot-3.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230605 15:04:03.743" level="TRACE">Return: 'E:\\TestTMB\\results\\selenium-screenshot-3.png'</msg>
<status status="PASS" starttime="20230605 15:04:03.583" endtime="20230605 15:04:03.743"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<msg timestamp="20230605 15:04:03.744" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230605 15:04:03.744" level="DEBUG">Closing browser with session id 88bb15898e9a12154192427711d54cdd.</msg>
<msg timestamp="20230605 15:04:03.745" level="DEBUG">DELETE http://localhost:62882/session/88bb15898e9a12154192427711d54cdd {}</msg>
<msg timestamp="20230605 15:04:03.854" level="DEBUG">http://localhost:62882 "DELETE /session/88bb15898e9a12154192427711d54cdd HTTP/1.1" 200 14</msg>
<msg timestamp="20230605 15:04:03.854" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:04:03.854" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:04:05.919" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230605 15:04:03.744" endtime="20230605 15:04:05.919"/>
</kw>
<doc>To verify that users can login unsuccessfully when they input
a correct username but wrong password.</doc>
<tag>login2</tag>
<tag>test_tmb</tag>
<status status="PASS" starttime="20230605 15:03:58.354" endtime="20230605 15:04:05.919"/>
</test>
<test id="s1-s1-t3" name="Login failed - Username not found" line="51">
<kw name="Code Login">
<arg>${URL}</arg>
<arg>${BROWSER}</arg>
<arg>${USER2}</arg>
<arg>${PASS1}</arg>
<msg timestamp="20230605 15:04:05.924" level="TRACE">Arguments: [ ${url}='http://the-internet.herokuapp.com/login' | ${browser}='Chrome' | ${user}='tomholland' | ${pass}='SuperSecretPassword!' ]</msg>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230605 15:04:05.925" level="TRACE">Arguments: [ 'http://the-internet.herokuapp.com/login' | 'Chrome' ]</msg>
<msg timestamp="20230605 15:04:05.925" level="INFO">Opening browser 'Chrome' to base url 'http://the-internet.herokuapp.com/login'.</msg>
<msg timestamp="20230605 15:04:05.954" level="INFO">Applicable driver not found; attempting to install with Selenium Manager (Beta)</msg>
<msg timestamp="20230605 15:04:05.954" level="DEBUG">Executing process: D:\Program Files\Python310\lib\site-packages\selenium\webdriver\common\windows\selenium-manager.exe --browser chrome --output json</msg>
<msg timestamp="20230605 15:04:06.089" level="DEBUG">Using driver at: C:\Users\License\.cache\selenium\chromedriver\win32\114.0.5735.90\chromedriver.exe</msg>
<msg timestamp="20230605 15:04:06.093" level="DEBUG">Started executable: `C:\Users\License\.cache\selenium\chromedriver\win32\114.0.5735.90\chromedriver.exe` in a child process with pid: 13308</msg>
<msg timestamp="20230605 15:04:06.608" level="DEBUG">POST http://localhost:62906/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"browserName": "chrome", "pageLoadStrategy": "normal", "goog:chromeOptions": {"extensions": [], "args": []}}}}</msg>
<msg timestamp="20230605 15:04:06.608" level="DEBUG">Starting new HTTP connection (1): localhost:62906</msg>
<msg timestamp="20230605 15:04:07.372" level="DEBUG">http://localhost:62906 "POST /session HTTP/1.1" 200 862</msg>
<msg timestamp="20230605 15:04:07.373" level="DEBUG">Remote response: status=200 | data={"value":{"capabilities":{"acceptInsecureCerts":false,"browserName":"chrome","browserVersion":"114.0.5735.91","chrome":{"chromedriverVersion":"114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052})","userDataDir":"C:\\Users\\License\\AppData\\Local\\Temp\\scoped_dir13308_2013740163"},"goog:chromeOptions":{"debuggerAddress":"localhost:62910"},"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platformName":"windows","proxy":{},"setWindowRect":true,"strictFileInteractability":false,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unhandledPromptBehavior":"dismiss and notify","webauthn:extension:credBlob":true,"webauthn:extension:largeBlob":true,"webauthn:extension:minPinLength":true,"webauthn:extension:prf":true,"webauthn:virtualAuthenticators":true},"sessionId":"21e85fc1f1df701b0e304e75fa436d3d"}} | headers=HTTPHeaderDict({'Content-Length': '862', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:04:07.373" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:04:07.373" level="DEBUG">POST http://localhost:62906/session/21e85fc1f1df701b0e304e75fa436d3d/timeouts {"script": 5000}</msg>
<msg timestamp="20230605 15:04:07.374" level="DEBUG">http://localhost:62906 "POST /session/21e85fc1f1df701b0e304e75fa436d3d/timeouts HTTP/1.1" 200 14</msg>
<msg timestamp="20230605 15:04:07.375" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:04:07.375" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:04:07.375" level="DEBUG">POST http://localhost:62906/session/21e85fc1f1df701b0e304e75fa436d3d/timeouts {"implicit": 0}</msg>
<msg timestamp="20230605 15:04:07.376" level="DEBUG">http://localhost:62906 "POST /session/21e85fc1f1df701b0e304e75fa436d3d/timeouts HTTP/1.1" 200 14</msg>
<msg timestamp="20230605 15:04:07.376" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:04:07.376" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:04:07.376" level="DEBUG">POST http://localhost:62906/session/21e85fc1f1df701b0e304e75fa436d3d/timeouts {"pageLoad": 300000}</msg>
<msg timestamp="20230605 15:04:07.377" level="DEBUG">http://localhost:62906 "POST /session/21e85fc1f1df701b0e304e75fa436d3d/timeouts HTTP/1.1" 200 14</msg>
<msg timestamp="20230605 15:04:07.377" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:04:07.377" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:04:07.378" level="DEBUG">POST http://localhost:62906/session/21e85fc1f1df701b0e304e75fa436d3d/url {"url": "http://the-internet.herokuapp.com/login"}</msg>
<msg timestamp="20230605 15:04:12.674" level="DEBUG">http://localhost:62906 "POST /session/21e85fc1f1df701b0e304e75fa436d3d/url HTTP/1.1" 200 14</msg>
<msg timestamp="20230605 15:04:12.675" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:04:12.675" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:04:12.675" level="DEBUG">Opened browser with session id 21e85fc1f1df701b0e304e75fa436d3d.</msg>
<msg timestamp="20230605 15:04:12.675" level="TRACE">Return: 3</msg>
<status status="PASS" starttime="20230605 15:04:05.924" endtime="20230605 15:04:12.675"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>//input[@id="username"]</arg>
<arg>${user}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230605 15:04:12.676" level="TRACE">Arguments: [ '//input[@id="username"]' | 'tomholland' ]</msg>
<msg timestamp="20230605 15:04:12.676" level="INFO">Typing text 'tomholland' into text field '//input[@id="username"]'.</msg>
<msg timestamp="20230605 15:04:12.676" level="DEBUG">POST http://localhost:62906/session/21e85fc1f1df701b0e304e75fa436d3d/elements {"using": "xpath", "value": "//input[@id=\"username\"]"}</msg>
<msg timestamp="20230605 15:04:12.692" level="DEBUG">http://localhost:62906 "POST /session/21e85fc1f1df701b0e304e75fa436d3d/elements HTTP/1.1" 200 96</msg>
<msg timestamp="20230605 15:04:12.692" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"EC6C840A3B557B4C782A37D2F099909B_element_6"}]} | headers=HTTPHeaderDict({'Content-Length': '96', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:04:12.692" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:04:12.692" level="DEBUG">POST http://localhost:62906/session/21e85fc1f1df701b0e304e75fa436d3d/element/EC6C840A3B557B4C782A37D2F099909B_element_6/clear {"id": "EC6C840A3B557B4C782A37D2F099909B_element_6"}</msg>
<msg timestamp="20230605 15:04:12.730" level="DEBUG">http://localhost:62906 "POST /session/21e85fc1f1df701b0e304e75fa436d3d/element/EC6C840A3B557B4C782A37D2F099909B_element_6/clear HTTP/1.1" 200 14</msg>
<msg timestamp="20230605 15:04:12.730" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:04:12.730" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:04:12.730" level="DEBUG">POST http://localhost:62906/session/21e85fc1f1df701b0e304e75fa436d3d/element/EC6C840A3B557B4C782A37D2F099909B_element_6/value {"text": "tomholland", "value": ["t", "o", "m", "h", "o", "l", "l", "a", "n", "d"], "id": "EC6C840A3B557B4C782A37D2F099909B_element_6"}</msg>
<msg timestamp="20230605 15:04:12.781" level="DEBUG">http://localhost:62906 "POST /session/21e85fc1f1df701b0e304e75fa436d3d/element/EC6C840A3B557B4C782A37D2F099909B_element_6/value HTTP/1.1" 200 14</msg>
<msg timestamp="20230605 15:04:12.782" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:04:12.782" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:04:12.782" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230605 15:04:12.675" endtime="20230605 15:04:12.782"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>//input[@id="password"]</arg>
<arg>${pass}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230605 15:04:12.783" level="TRACE">Arguments: [ '//input[@id="password"]' | 'SuperSecretPassword!' ]</msg>
<msg timestamp="20230605 15:04:12.783" level="INFO">Typing text 'SuperSecretPassword!' into text field '//input[@id="password"]'.</msg>
<msg timestamp="20230605 15:04:12.783" level="DEBUG">POST http://localhost:62906/session/21e85fc1f1df701b0e304e75fa436d3d/elements {"using": "xpath", "value": "//input[@id=\"password\"]"}</msg>
<msg timestamp="20230605 15:04:12.794" level="DEBUG">http://localhost:62906 "POST /session/21e85fc1f1df701b0e304e75fa436d3d/elements HTTP/1.1" 200 96</msg>
<msg timestamp="20230605 15:04:12.794" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"EC6C840A3B557B4C782A37D2F099909B_element_3"}]} | headers=HTTPHeaderDict({'Content-Length': '96', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:04:12.794" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:04:12.794" level="DEBUG">POST http://localhost:62906/session/21e85fc1f1df701b0e304e75fa436d3d/element/EC6C840A3B557B4C782A37D2F099909B_element_3/clear {"id": "EC6C840A3B557B4C782A37D2F099909B_element_3"}</msg>
<msg timestamp="20230605 15:04:12.822" level="DEBUG">http://localhost:62906 "POST /session/21e85fc1f1df701b0e304e75fa436d3d/element/EC6C840A3B557B4C782A37D2F099909B_element_3/clear HTTP/1.1" 200 14</msg>
<msg timestamp="20230605 15:04:12.822" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:04:12.822" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:04:12.822" level="DEBUG">POST http://localhost:62906/session/21e85fc1f1df701b0e304e75fa436d3d/element/EC6C840A3B557B4C782A37D2F099909B_element_3/value {"text": "SuperSecretPassword!", "value": ["S", "u", "p", "e", "r", "S", "e", "c", "r", "e", "t", "P", "a", "s", "s", "w", "o", "r", "d", "!"], "id": "EC6C840A3B557B4C782A37D2F099909B_element_3"}</msg>
<msg timestamp="20230605 15:04:12.878" level="DEBUG">http://localhost:62906 "POST /session/21e85fc1f1df701b0e304e75fa436d3d/element/EC6C840A3B557B4C782A37D2F099909B_element_3/value HTTP/1.1" 200 14</msg>
<msg timestamp="20230605 15:04:12.879" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:04:12.879" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:04:12.879" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230605 15:04:12.782" endtime="20230605 15:04:12.879"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>//button[@class="radius"]</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230605 15:04:12.879" level="TRACE">Arguments: [ '//button[@class="radius"]' ]</msg>
<msg timestamp="20230605 15:04:12.879" level="INFO">Clicking button '//button[@class="radius"]'.</msg>
<msg timestamp="20230605 15:04:12.880" level="DEBUG">POST http://localhost:62906/session/21e85fc1f1df701b0e304e75fa436d3d/elements {"using": "xpath", "value": "//button[@class=\"radius\"]"}</msg>
<msg timestamp="20230605 15:04:12.892" level="DEBUG">http://localhost:62906 "POST /session/21e85fc1f1df701b0e304e75fa436d3d/elements HTTP/1.1" 200 96</msg>
<msg timestamp="20230605 15:04:12.892" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"EC6C840A3B557B4C782A37D2F099909B_element_7"}]} | headers=HTTPHeaderDict({'Content-Length': '96', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:04:12.892" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:04:12.892" level="DEBUG">GET http://localhost:62906/session/21e85fc1f1df701b0e304e75fa436d3d/element/EC6C840A3B557B4C782A37D2F099909B_element_7/name {"id": "EC6C840A3B557B4C782A37D2F099909B_element_7"}</msg>
<msg timestamp="20230605 15:04:12.897" level="DEBUG">http://localhost:62906 "GET /session/21e85fc1f1df701b0e304e75fa436d3d/element/EC6C840A3B557B4C782A37D2F099909B_element_7/name HTTP/1.1" 200 18</msg>
<msg timestamp="20230605 15:04:12.897" level="DEBUG">Remote response: status=200 | data={"value":"button"} | headers=HTTPHeaderDict({'Content-Length': '18', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:04:12.898" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:04:12.898" level="DEBUG">POST http://localhost:62906/session/21e85fc1f1df701b0e304e75fa436d3d/elements {"using": "xpath", "value": "//button[@class=\"radius\"]"}</msg>
<msg timestamp="20230605 15:04:12.906" level="DEBUG">http://localhost:62906 "POST /session/21e85fc1f1df701b0e304e75fa436d3d/elements HTTP/1.1" 200 96</msg>
<msg timestamp="20230605 15:04:12.906" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"EC6C840A3B557B4C782A37D2F099909B_element_7"}]} | headers=HTTPHeaderDict({'Content-Length': '96', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:04:12.906" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:04:12.906" level="DEBUG">GET http://localhost:62906/session/21e85fc1f1df701b0e304e75fa436d3d/element/EC6C840A3B557B4C782A37D2F099909B_element_7/name {"id": "EC6C840A3B557B4C782A37D2F099909B_element_7"}</msg>
<msg timestamp="20230605 15:04:12.911" level="DEBUG">http://localhost:62906 "GET /session/21e85fc1f1df701b0e304e75fa436d3d/element/EC6C840A3B557B4C782A37D2F099909B_element_7/name HTTP/1.1" 200 18</msg>
<msg timestamp="20230605 15:04:12.911" level="DEBUG">Remote response: status=200 | data={"value":"button"} | headers=HTTPHeaderDict({'Content-Length': '18', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:04:12.911" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:04:12.911" level="DEBUG">POST http://localhost:62906/session/21e85fc1f1df701b0e304e75fa436d3d/element/EC6C840A3B557B4C782A37D2F099909B_element_7/click {"id": "EC6C840A3B557B4C782A37D2F099909B_element_7"}</msg>
<msg timestamp="20230605 15:04:13.574" level="DEBUG">http://localhost:62906 "POST /session/21e85fc1f1df701b0e304e75fa436d3d/element/EC6C840A3B557B4C782A37D2F099909B_element_7/click HTTP/1.1" 200 14</msg>
<msg timestamp="20230605 15:04:13.574" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:04:13.575" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:04:13.575" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230605 15:04:12.879" endtime="20230605 15:04:13.575"/>
</kw>
<msg timestamp="20230605 15:04:13.575" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230605 15:04:05.923" endtime="20230605 15:04:13.575"/>
</kw>
<kw name="Page Should Contain Text">
<arg>Your username is invalid!</arg>
<msg timestamp="20230605 15:04:13.576" level="TRACE">Arguments: [ ${text}='Your username is invalid!' ]</msg>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>//*[contains(text(),"${text}")]</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20230605 15:04:13.578" level="TRACE">Arguments: [ '//*[contains(text(),"Your username is invalid!")]' ]</msg>
<msg timestamp="20230605 15:04:13.578" level="DEBUG">POST http://localhost:62906/session/21e85fc1f1df701b0e304e75fa436d3d/elements {"using": "xpath", "value": "//*[contains(text(),\"Your username is invalid!\")]"}</msg>
<msg timestamp="20230605 15:04:13.605" level="DEBUG">http://localhost:62906 "POST /session/21e85fc1f1df701b0e304e75fa436d3d/elements HTTP/1.1" 200 97</msg>
<msg timestamp="20230605 15:04:13.605" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"D3E208833E6EF3A39DFFDD318775A7C3_element_11"}]} | headers=HTTPHeaderDict({'Content-Length': '97', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:04:13.605" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:04:13.605" level="INFO">Current page contains element '//*[contains(text(),"Your username is invalid!")]'.</msg>
<msg timestamp="20230605 15:04:13.605" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230605 15:04:13.577" endtime="20230605 15:04:13.606"/>
</kw>
<msg timestamp="20230605 15:04:13.606" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230605 15:04:13.576" endtime="20230605 15:04:13.606"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20230605 15:04:13.607" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230605 15:04:13.608" level="DEBUG">GET http://localhost:62906/session/21e85fc1f1df701b0e304e75fa436d3d/screenshot {}</msg>
<msg timestamp="20230605 15:04:13.713" level="DEBUG">http://localhost:62906 "GET /session/21e85fc1f1df701b0e304e75fa436d3d/screenshot HTTP/1.1" 200 71864</msg>
<msg timestamp="20230605 15:04:13.714" level="DEBUG">Remote response: status=200 | data={"value":"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"} | headers=HTTPHeaderDict({'Content-Length': '71864', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:04:13.715" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:04:13.781" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-4.png"&gt;&lt;img src="selenium-screenshot-4.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230605 15:04:13.782" level="TRACE">Return: 'E:\\TestTMB\\results\\selenium-screenshot-4.png'</msg>
<status status="PASS" starttime="20230605 15:04:13.607" endtime="20230605 15:04:13.782"/>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<msg timestamp="20230605 15:04:13.783" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230605 15:04:13.783" level="DEBUG">Closing browser with session id 21e85fc1f1df701b0e304e75fa436d3d.</msg>
<msg timestamp="20230605 15:04:13.783" level="DEBUG">DELETE http://localhost:62906/session/21e85fc1f1df701b0e304e75fa436d3d {}</msg>
<msg timestamp="20230605 15:04:13.840" level="DEBUG">http://localhost:62906 "DELETE /session/21e85fc1f1df701b0e304e75fa436d3d HTTP/1.1" 200 14</msg>
<msg timestamp="20230605 15:04:13.841" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230605 15:04:13.841" level="DEBUG">Finished Request</msg>
<msg timestamp="20230605 15:04:15.918" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230605 15:04:13.783" endtime="20230605 15:04:15.919"/>
</kw>
<doc>To verify that users can login unsuccessfully
when they input a username that did not exist.</doc>
<tag>login3</tag>
<tag>test_tmb</tag>
<status status="PASS" starttime="20230605 15:04:05.921" endtime="20230605 15:04:15.920"/>
</test>
<doc>Automated tests for login functionality</doc>
<status status="PASS" starttime="20230605 15:03:46.995" endtime="20230605 15:04:15.928"/>
</suite>
<suite id="s1-s2" name="Test3" source="E:\TestTMB\testcase\test3.robot">
<test id="s1-s2-t1" name="Get user profile success" line="11">
<kw name="Create Session" library="RequestsLibrary">
<arg>reqres</arg>
<arg>https://reqres.in</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230605 15:04:16.380" level="TRACE">Arguments: [ 'reqres' | 'https://reqres.in' ]</msg>
<msg timestamp="20230605 15:04:16.380" level="INFO">Creating Session using : alias=reqres, url=https://reqres.in, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20230605 15:04:16.380" level="DEBUG">Creating session: reqres</msg>
<msg timestamp="20230605 15:04:16.381" level="TRACE">Return: &lt;requests.sessions.Session object at 0x00000296000A77F0&gt;</msg>
<status status="PASS" starttime="20230605 15:04:16.380" endtime="20230605 15:04:16.381"/>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp}</var>
<arg>reqres</arg>
<arg>/api/users/12</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230605 15:04:16.381" level="TRACE">Arguments: [ 'reqres' | '/api/users/12' ]</msg>
<msg timestamp="20230605 15:04:16.401" level="DEBUG">Starting new HTTPS connection (1): reqres.in:443</msg>
<msg timestamp="20230605 15:04:17.198" level="DEBUG">https://reqres.in:443 "GET /api/users/12 HTTP/1.1" 200 None</msg>
<msg timestamp="20230605 15:04:17.259" level="INFO">GET Request : url=https://reqres.in/api/users/12 
 path_url=/api/users/12 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230605 15:04:17.259" level="INFO">GET Response : url=https://reqres.in/api/users/12 
 status=200, reason=OK 
 headers={'Date': 'Mon, 05 Jun 2023 08:04:16 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Etag': 'W/"11c-Y8Nrcu5DO2DrJvfp3zc2PKGiar4"', 'Via': '1.1 vegur', 'Cache-Control': 'max-age=14400', 'CF-Cache-Status': 'MISS', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=1pD0%2BPKNu%2FNpywXaZyNOKlvgBFOq4SsVMd2Wdj6yKcstMJC1HvFwALeCWg4vJU8axPiwBXXyZ7dwWsqOsJTaKD2BR%2Bz4yFDoSDIj4lGcpDQ2xQNBNRy%2B90WrBlaiAlDG8l96XvWIFw%3D%3D"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}', 'Vary': 'Accept-Encoding', 'Server': 'cloudflare', 'CF-RAY': '7d26e760eda64b6a-BKK', 'Content-Encoding': 'gzip'} 
 body={"data":{"id":12,"email":"rachel.howell@reqres.in","first_name":"Rachel","last_name":"Howell","avatar":"https://reqres.in/img/faces/12-image.jpg"},"support":{"url":"https://reqres.in/#support-heading","text":"To keep ReqRes free, contributions towards server costs are appreciated!"}} 
 </msg>
<msg timestamp="20230605 15:04:17.259" level="INFO">D:\Program Files\Python310\lib\site-packages\urllib3\connectionpool.py:1056: InsecureRequestWarning: Unverified HTTPS request is being made to host 'reqres.in'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20230605 15:04:17.260" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20230605 15:04:17.261" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230605 15:04:16.381" endtime="20230605 15:04:17.261"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${resp.status_code}</var>
<arg>${resp.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230605 15:04:17.263" level="TRACE">Arguments: [ 200 ]</msg>
<msg timestamp="20230605 15:04:17.263" level="DEBUG">Argument types are:
&lt;class 'int'&gt;</msg>
<msg timestamp="20230605 15:04:17.263" level="TRACE">Return: '200'</msg>
<msg timestamp="20230605 15:04:17.263" level="INFO">${resp.status_code} = 200</msg>
<status status="PASS" starttime="20230605 15:04:17.261" endtime="20230605 15:04:17.263"/>
</kw>
<kw name="Should Be Equal As Strings">
<arg>${resp.status_code}</arg>
<arg>200</arg>
<msg timestamp="20230605 15:04:17.265" level="TRACE">Arguments: [ ${actual}='200' | ${expected}='200' ]</msg>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual}</arg>
<arg>${expected}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20230605 15:04:17.266" level="TRACE">Arguments: [ '200' | '200' ]</msg>
<msg timestamp="20230605 15:04:17.266" level="DEBUG">Argument types are:
&lt;class 'str'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20230605 15:04:17.266" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230605 15:04:17.265" endtime="20230605 15:04:17.266"/>
</kw>
<msg timestamp="20230605 15:04:17.266" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230605 15:04:17.264" endtime="20230605 15:04:17.266"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${json_data}</var>
<arg>${resp.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230605 15:04:17.268" level="TRACE">Arguments: [ {'data': {'avatar': 'https://reqres.in/img/faces/12-image.jpg',
          'email': 'rachel.howell@reqres.in',
          'first_name': 'Rachel',
          'id': 12,
          'last_name': 'Howell'},
 'support': {'text': 'To keep ReqRes free, contributions towards server costs are appreciated!',
             'url': 'https://reqres.in/#support-heading'}} ]</msg>
<msg timestamp="20230605 15:04:17.270" level="TRACE">Return: {'data': {'avatar': 'https://reqres.in/img/faces/12-image.jpg',
          'email': 'rachel.howell@reqres.in',
          'first_name': 'Rachel',
          'id': 12,
          'last_name': 'Howell'},
 'support': {'text': 'To keep ReqRes free, contributions towards server costs are appreciated!',
             'url': 'https://reqres.in/#support-heading'}}</msg>
<msg timestamp="20230605 15:04:17.271" level="INFO">${json_data} = {'data': {'id': 12, 'email': 'rachel.howell@reqres.in', 'first_name': 'Rachel', 'last_name': 'Howell', 'avatar': 'https://reqres.in/img/faces/12-image.jpg'}, 'support': {'url': 'https://reqres.in/#sup...</msg>
<status status="PASS" starttime="20230605 15:04:17.267" endtime="20230605 15:04:17.271"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${id}</var>
<arg>${json_data['data']['id']}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230605 15:04:17.272" level="TRACE">Arguments: [ 12 ]</msg>
<msg timestamp="20230605 15:04:17.272" level="DEBUG">Argument types are:
&lt;class 'int'&gt;</msg>
<msg timestamp="20230605 15:04:17.272" level="TRACE">Return: '12'</msg>
<msg timestamp="20230605 15:04:17.272" level="INFO">${id} = 12</msg>
<status status="PASS" starttime="20230605 15:04:17.272" endtime="20230605 15:04:17.273"/>
</kw>
<kw name="Should Be Equal As Strings">
<arg>${id}</arg>
<arg>12</arg>
<msg timestamp="20230605 15:04:17.273" level="TRACE">Arguments: [ ${actual}='12' | ${expected}='12' ]</msg>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual}</arg>
<arg>${expected}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20230605 15:04:17.273" level="TRACE">Arguments: [ '12' | '12' ]</msg>
<msg timestamp="20230605 15:04:17.273" level="DEBUG">Argument types are:
&lt;class 'str'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20230605 15:04:17.273" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230605 15:04:17.273" endtime="20230605 15:04:17.274"/>
</kw>
<msg timestamp="20230605 15:04:17.274" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230605 15:04:17.273" endtime="20230605 15:04:17.274"/>
</kw>
<kw name="Should Be Equal As Strings">
<arg>${json_data['data']['email']}</arg>
<arg>rachel.howell@reqres.in</arg>
<msg timestamp="20230605 15:04:17.275" level="TRACE">Arguments: [ ${actual}='rachel.howell@reqres.in' | ${expected}='rachel.howell@reqres.in' ]</msg>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual}</arg>
<arg>${expected}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20230605 15:04:17.275" level="TRACE">Arguments: [ 'rachel.howell@reqres.in' | 'rachel.howell@reqres.in' ]</msg>
<msg timestamp="20230605 15:04:17.275" level="DEBUG">Argument types are:
&lt;class 'str'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20230605 15:04:17.275" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230605 15:04:17.275" endtime="20230605 15:04:17.275"/>
</kw>
<msg timestamp="20230605 15:04:17.275" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230605 15:04:17.274" endtime="20230605 15:04:17.275"/>
</kw>
<kw name="Should Be Equal As Strings">
<arg>${json_data['data']['first_name']}</arg>
<arg>Rachel</arg>
<msg timestamp="20230605 15:04:17.277" level="TRACE">Arguments: [ ${actual}='Rachel' | ${expected}='Rachel' ]</msg>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual}</arg>
<arg>${expected}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20230605 15:04:17.277" level="TRACE">Arguments: [ 'Rachel' | 'Rachel' ]</msg>
<msg timestamp="20230605 15:04:17.277" level="DEBUG">Argument types are:
&lt;class 'str'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20230605 15:04:17.277" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230605 15:04:17.277" endtime="20230605 15:04:17.277"/>
</kw>
<msg timestamp="20230605 15:04:17.277" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230605 15:04:17.276" endtime="20230605 15:04:17.277"/>
</kw>
<kw name="Should Be Equal As Strings">
<arg>${json_data['data']['last_name']}</arg>
<arg>Howell</arg>
<msg timestamp="20230605 15:04:17.279" level="TRACE">Arguments: [ ${actual}='Howell' | ${expected}='Howell' ]</msg>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual}</arg>
<arg>${expected}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20230605 15:04:17.280" level="TRACE">Arguments: [ 'Howell' | 'Howell' ]</msg>
<msg timestamp="20230605 15:04:17.280" level="DEBUG">Argument types are:
&lt;class 'str'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20230605 15:04:17.280" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230605 15:04:17.279" endtime="20230605 15:04:17.280"/>
</kw>
<msg timestamp="20230605 15:04:17.280" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230605 15:04:17.279" endtime="20230605 15:04:17.280"/>
</kw>
<kw name="Should Be Equal As Strings">
<arg>${json_data['data']['avatar']}</arg>
<arg>https://reqres.in/img/faces/12-image.jpg</arg>
<msg timestamp="20230605 15:04:17.283" level="TRACE">Arguments: [ ${actual}='https://reqres.in/img/faces/12-image.jpg' | ${expected}='https://reqres.in/img/faces/12-image.jpg' ]</msg>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${actual}</arg>
<arg>${expected}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20230605 15:04:17.283" level="TRACE">Arguments: [ 'https://reqres.in/img/faces/12-image.jpg' | 'https://reqres.in/img/faces/12-image.jpg' ]</msg>
<msg timestamp="20230605 15:04:17.283" level="DEBUG">Argument types are:
&lt;class 'str'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20230605 15:04:17.283" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230605 15:04:17.283" endtime="20230605 15:04:17.283"/>
</kw>
<msg timestamp="20230605 15:04:17.284" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230605 15:04:17.281" endtime="20230605 15:04:17.284"/>
</kw>
<tag>test_tmb</tag>
<status status="PASS" starttime="20230605 15:04:16.379" endtime="20230605 15:04:17.285"/>
</test>
<test id="s1-s2-t2" name="Get user profile but user not found" line="24">
<kw name="Create Session" library="RequestsLibrary">
<arg>reqres</arg>
<arg>https://reqres.in</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230605 15:04:17.288" level="TRACE">Arguments: [ 'reqres' | 'https://reqres.in' ]</msg>
<msg timestamp="20230605 15:04:17.288" level="INFO">Creating Session using : alias=reqres, url=https://reqres.in, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20230605 15:04:17.288" level="DEBUG">Creating session: reqres</msg>
<msg timestamp="20230605 15:04:17.288" level="TRACE">Return: &lt;requests.sessions.Session object at 0x00000296000DE740&gt;</msg>
<status status="PASS" starttime="20230605 15:04:17.288" endtime="20230605 15:04:17.289"/>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp}</var>
<arg>reqres</arg>
<arg>/api/users/1234</arg>
<arg>expected_status=Anything</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230605 15:04:17.290" level="TRACE">Arguments: [ 'reqres' | '/api/users/1234' | expected_status='Anything' ]</msg>
<msg timestamp="20230605 15:04:17.293" level="DEBUG">Starting new HTTPS connection (1): reqres.in:443</msg>
<msg timestamp="20230605 15:04:17.812" level="DEBUG">https://reqres.in:443 "GET /api/users/1234 HTTP/1.1" 404 2</msg>
<msg timestamp="20230605 15:04:17.813" level="INFO">GET Request : url=https://reqres.in/api/users/1234 
 path_url=/api/users/1234 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230605 15:04:17.814" level="INFO">GET Response : url=https://reqres.in/api/users/1234 
 status=404, reason=Not Found 
 headers={'Date': 'Mon, 05 Jun 2023 08:04:17 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '2', 'Connection': 'keep-alive', 'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Etag': 'W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"', 'Via': '1.1 vegur', 'Cache-Control': 'max-age=14400', 'CF-Cache-Status': 'MISS', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=8ehBOs%2FKKcTsuisfuPruVNpvVfNWwlFUiLw1fzAqQggReUrYSZiQXfefYxfM%2FzNlDDGJqU8oUXZ8i%2FwT2CdEqn5KsWyU%2B76VGUIAb5ORGz4FpNlPcidV2wjr%2Fe3lHT6RFMvaGSvLFA%3D%3D"}],"group":"cf-nel","max_age":604800}', 'NEL': '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}', 'Vary': 'Accept-Encoding', 'Server': 'cloudflare', 'CF-RAY': '7d26e764ec5e45ab-BKK'} 
 body={} 
 </msg>
<msg timestamp="20230605 15:04:17.814" level="INFO">D:\Program Files\Python310\lib\site-packages\urllib3\connectionpool.py:1056: InsecureRequestWarning: Unverified HTTPS request is being made to host 'reqres.in'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20230605 15:04:17.817" level="TRACE">Return: &lt;Response [404]&gt;</msg>
<msg timestamp="20230605 15:04:17.818" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20230605 15:04:17.289" endtime="20230605 15:04:17.818"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>404</arg>
<arg>${resp}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<msg timestamp="20230605 15:04:17.821" level="TRACE">Arguments: [ '404' | &lt;Response [404]&gt; ]</msg>
<msg timestamp="20230605 15:04:17.822" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230605 15:04:17.820" endtime="20230605 15:04:17.822"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${json_data}</var>
<arg>${resp.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230605 15:04:17.826" level="TRACE">Arguments: [ {} ]</msg>
<msg timestamp="20230605 15:04:17.826" level="TRACE">Return: {}</msg>
<msg timestamp="20230605 15:04:17.826" level="INFO">${json_data} = {}</msg>
<status status="PASS" starttime="20230605 15:04:17.824" endtime="20230605 15:04:17.826"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${resp.json()}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230605 15:04:17.828" level="TRACE">Arguments: [ {} ]</msg>
<msg timestamp="20230605 15:04:17.828" level="INFO">Length is 0</msg>
<msg timestamp="20230605 15:04:17.828" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230605 15:04:17.827" endtime="20230605 15:04:17.828"/>
</kw>
<tag>test_tmb</tag>
<status status="PASS" starttime="20230605 15:04:17.287" endtime="20230605 15:04:17.828"/>
</test>
<status status="PASS" starttime="20230605 15:04:15.937" endtime="20230605 15:04:17.831"/>
</suite>
<status status="PASS" starttime="20230605 15:03:46.899" endtime="20230605 15:04:17.834"/>
</suite>
<statistics>
<total>
<stat pass="5" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">login2</stat>
<stat pass="1" fail="0" skip="0">login3</stat>
<stat pass="1" fail="0" skip="0">test</stat>
<stat pass="5" fail="0" skip="0">test_tmb</stat>
</tag>
<suite>
<stat pass="5" fail="0" skip="0" id="s1" name="Testcase">Testcase</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1" name="Test2">Testcase.Test2</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2" name="Test3">Testcase.Test3</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
